{"version":3,"sources":["components/Button/Button.js","components/Modal/Modal.js","components/Header/Header.js","icons/growth.js","icons/FavouriteIcon/FavouriteIcon.js","icons/star.js","store/actionConstatns/actionConstans.js","store/actionCreators/actionCreators.js","icons/InCartIcon.js","components/Fontbtn.js","components/Product/Product.js","components/Pages/ProductList/ProductList.js","components/Pages/Favourites/Favourites.js","components/CartTotal/CartTotal.js","components/ProductInCart/ProductInCart.js","components/Form/formScheme.js","components/Form/Form.js","components/Pages/Cart/Cart.js","components/Main/Main.js","components/Footer/Footer.js","App.js","serviceWorker.js","store/reducers/modalReducer.js","store/reducers/productListReducer.js","store/reducers/reducer.js","store/store.js","index.js"],"names":["Button","props","classText","text","btnType","onClick","isDisabled","className","type","disabled","Modal","isOpened","header","closeButton","actions","closeModal","withRouter","color","history","push","fill","viewBox","xmlns","d","exact","to","FavouriteIcon","isFavourite","toggleFavourite","ActionsConst","FETCH_PRODUCTS","GET_PRODUCTS_FROM_LS","TOGGLE_FAVOURITES","TOGGLE_MODAL","CLOSE_MODAL","ADD_TO_CART","DELETE_FROM_CART","DECREASE_AMOUNT_IN_CART","CLEAN_CART","toggleModal","product","dispatch","payload","addToCart","InCartIcon","inCart","FontIcon","iconClass","connect","title","price","imgUrl","nowPath","alt","src","cartCounter","store","productList","location","pathname","products","map","key","vendorCode","console","log","favourites","filter","favouritesProducts","length","productsInCart","reduce","sum","currentItem","decreaseAmountInCart","only_letters_regex","formScheme","yup","shape","firstName","min","matches","required","lastName","address","mobileNumber","cleanCart","initialValues","onSubmit","e","validationSchema","formikProps","component","name","placeholder","isValid","cartProducts","productsBought","bought","fullCart","emptyCart","alreadyBoughtCart","Main","path","ProductList","Favourites","Cart","Footer","href","target","modalIsOpened","modal","fetchProducts","axios","then","result","data","deleteFromCart","setProductsListFromLS","productListFromLS","getProductList","useCallback","localStorage","getItem","useEffect","window","addEventListener","ev","preventDefault","setItem","JSON","stringify","Boolean","hostname","match","initialState","action","productIndex","updatedProduct","prevCartCounter","parse","indexOf","update","$splice","productInCart","includes","reducer","combineReducers","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d1fd88d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n\r\n    const {classText, text, btnType, onClick, isDisabled} = props;\r\n\r\n    return (\r\n        <button className={(`btn ${classText}`)}\r\n                onClick={onClick}\r\n                type={btnType} disabled={isDisabled}>\r\n            {text}</button>\r\n\r\n    )\r\n}\r\n\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    classText: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Button;\r\n\r\n","import React from 'react';\r\nimport './Modal.scss';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Modal =(props)=> {\r\n        const {isOpened, header, closeButton, text, actions, closeModal} = props;\r\n\r\n        return isOpened ? (\r\n            <div className='modal'>\r\n\r\n                <div className='modal-main'>\r\n                    <div className='modal-header'>\r\n                        <div className='header-text'>{header}</div>\r\n                        <div className='close-btn' onClick={closeModal}>{closeButton}</div>\r\n                    </div>\r\n                    <div className='modal-body'>{text}</div>\r\n                    <div className='modal-footer'>\r\n                        {actions}\r\n                    </div>\r\n                </div>\r\n                <div className='modal-backdrop' onClick={closeModal}>\r\n                </div>\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n\r\nModal.propTypes = {\r\n    isOpened: PropTypes.bool.isRequired ,\r\n    header: PropTypes.string,\r\n    closeButton: PropTypes.any,\r\n    text: PropTypes.string.isRequired,\r\n    actions: PropTypes.array,\r\n    closeModal: PropTypes.func.isRequired\r\n};\r\nexport default Modal;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {growth} from '../../icons/growth';\r\nimport './Header.scss';\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst Header =(props)=> {\r\n    const {history}=props;\r\n    const logoRed=()=>{\r\n        history.push('/')\r\n    }\r\n        return (\r\n            <header className='header'>\r\n                <div className='container'>\r\n                    <div className='header-logo'onClick={logoRed}>\r\n                        <div className='logo-icon'>{growth('rgb(37, 75, 37)')}</div>\r\n                        <div className='logo-text'>Grow</div>\r\n                    </div>\r\n                    <nav className='header-nav'>\r\n                        <NavLink exact to='/' className='header-link'>Products</NavLink>\r\n                        <NavLink exact to='/favourites' className='header-link'>Favourites</NavLink>\r\n                        <NavLink exact to='/cart' className='header-link'>Cart</NavLink>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\nexport default withRouter(Header);","import React from \"react\";\r\nexport function growth (color) {\r\n        return (\r\n            <svg className='icon icon-logo'\r\n                fill={color}\r\n                 viewBox=\"0 -9 418.93516 418\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path d=\"m208.070312 400.226562c-14.59375 0-29.179687-2.941406-42.6875-8.816406l-64.589843-28.078125c-23.367188-10.164062-48.074219-16.601562-73.433594-19.136719l-21.210937-2.121093c-3.492188-.347657-6.148438-3.285157-6.148438-6.792969v-66.535156c0-1.476563.480469-2.914063 1.367188-4.09375 1.585937-2.121094 39.601562-51.785156 97.671874-38.863282 32.660157 7.257813 58.957032 20.839844 75.265626 30.957032 11.839843 7.34375 25.71875 11.222656 40.136718 11.222656h64.589844c11.132812 0 20.917969 5.890625 26.390625 14.726562l55.628906-64.089843c10.785157-14.402344 28.429688-23.222657 46.902344-23.222657h4.15625c2.308594 0 4.457031 1.164063 5.714844 3.09375 1.261719 1.929688 1.460937 4.371094.535156 6.480469l-50.3125 114.34375c-11 25.007813-33.398437 43.898438-59.910156 50.527344l-8.851563 2.210937-51.492187 20.597657c-12.671875 5.066406-26.199219 7.589843-39.722657 7.589843zm-194.414062-71.125 15.0625 1.507813c26.769531 2.675781 52.851562 9.476563 77.523438 20.203125l64.585937 28.078125c22.710937 9.875 48.902344 10.261719 71.898437 1.0625l51.914063-20.765625c.289063-.113281.582031-.207031.882813-.28125l9.300781-2.328125c22.449219-5.613281 41.414062-21.605469 50.722656-42.777344l45.890625-104.292969c-11.75 1.730469-22.5625 8.0625-29.765625 17.664063l-61.625 71.023437c.007813.265626.011719.527344.011719.796876 0 17.105468-13.917969 31.023437-31.023438 31.023437h-90.117187c-11.714844 0-23.292969 1.878906-34.40625 5.582031l-2.507813-6.367187-2.121094-6.488281.347657-.113282c12.472656-4.15625 25.5-6.269531 38.6875-6.269531h90.117187c9.574219 0 17.371094-7.792969 17.371094-17.371094s-7.792969-17.371093-17.371094-17.371093h-64.589844c-16.964843 0-33.332031-4.589844-47.332031-13.273438-15.40625-9.558594-40.242187-22.382812-71.027343-29.230469-43.976563-9.753906-75.621094 23.996094-82.425782 32.046875v57.941406zm0 0\"/>\r\n                <path d=\"m268.867188 193.839844c-10.5 0-22.273438-3.242188-35.234376-9.722656-1.570312-.789063-2.78125-2.15625-3.375-3.808594-.527343-1.480469-12.726562-36.570313 6.660157-62.519532 14.089843-18.863281 40.582031-27.359374 78.785156-25.230468 3.484375.191406 6.261719 2.984375 6.433594 6.476562.136719 2.710938 2.953125 66.699219-29.675781 88.003906-6.9375 4.535157-14.820313 6.800782-23.59375 6.800782zm-26.527344-20.679688c17.933594 8.410156 32.269531 9.234375 42.660156 2.449219 19.347656-12.636719 23.53125-50.148437 23.632812-69.671875-29.933593-.730469-50.3125 6.015625-60.777343 20.019531-12.453125 16.675781-7.613281 39.613281-5.515625 47.203125zm0 0\"/>\r\n                <path d=\"m164.460938 104.390625c-12.105469 0-26.070313-2.59375-38.257813-11.519531-20.671875-15.148438-30.171875-43.988282-28.242187-85.714844.164062-3.488281 2.929687-6.292969 6.417968-6.5 2.953125-.167969 72.851563-3.898438 96.371094 31.40625 10.953125 16.433594 10.054688 37.957031-2.660156 63.984375-.773438 1.582031-2.125 2.804687-3.777344 3.410156-.917969.339844-13.734375 4.933594-29.851562 4.933594zm27.496093-11.339844h.066407zm-80.558593-78.960937c-.589844 33.421875 7.09375 56.203125 22.871093 67.765625 18.890625 13.839843 44.683594 7.957031 52.792969 5.59375 9.277344-20.132813 10.0625-36.207031 2.328125-47.816407-14.375-21.578124-56.53125-25.796874-77.992187-25.542968zm0 0\"/>\r\n                <path d=\"m217.777344 279.21875c-.214844 0-.429688-.011719-.648438-.03125-3.636718-.34375-6.359375-3.488281-6.175781-7.140625.402344-8.03125 1.089844-15.648437 2.023437-22.867187 2.839844-48.3125 1.375-160.820313-69.757812-191.945313-3.453125-1.511719-5.03125-5.535156-3.519531-8.992187 1.507812-3.449219 5.542969-5.023438 8.992187-3.515626 41.917969 18.339844 68.289063 64 76.246094 132.042969.714844 6.097657 1.25 12.109375 1.648438 17.964844 18.734374-47.339844 47.394531-64.066406 49.101562-65.023437 3.28125-1.855469 7.445312-.675782 9.296875 2.601562 1.839844 3.28125.683594 7.433594-2.585937 9.285156-.722657.421875-44.671876 26.796875-55.703126 108.132813-.839843 13.914062-2.050781 22.785156-2.164062 23.597656-.472656 3.40625-3.382812 5.890625-6.753906 5.890625zm0 0\"/>\r\n            </svg>\r\n        );\r\n}","import React from 'react';\r\nimport { star } from '../star'\r\n\r\nconst FavouriteIcon =(props)=> {\r\n\r\n        const {isFavourite, toggleFavourite} = props;\r\n\r\n        return (\r\n            <div className='icon-container' onClick={toggleFavourite}>\r\n                {star(isFavourite)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default FavouriteIcon;","import React from \"react\";\r\n\r\nexport function star(isFilled) {\r\n    if (isFilled) {\r\n        return(\r\n            <svg\r\n                viewBox=\"0 0 511.98645 511\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className='icon icon-star icon-star__simple'\r\n                fill='#65a15a'\r\n            >\r\n                <path d=\"m499.574219 188.503906c-3.199219-9.921875-11.988281-16.9375-22.398438-17.898437l-141.355469-12.84375-55.894531-130.835938c-4.117187-9.578125-13.503906-15.765625-23.933593-15.765625-10.433594 0-19.820313 6.207032-23.9375 15.808594l-55.890626 130.816406-141.378906 12.839844c-10.386718.941406-19.175781 7.957031-22.378906 17.878906-3.21875 9.921875-.234375 20.777344 7.617188 27.648438l106.859374 93.695312-31.511718 138.773438c-2.300782 10.199218 1.664062 20.734375 10.136718 26.878906 4.519532 3.328125 9.875 4.992188 15.230469 4.992188 4.628907 0 9.238281-1.234376 13.355469-3.710938l121.898438-72.894531 121.875 72.875c8.917968 5.351562 20.160156 4.882812 28.609374-1.238281 8.46875-6.144532 12.4375-16.683594 10.132813-26.882813l-31.507813-138.769531 106.859376-93.699219c7.847656-6.867187 10.835937-17.726563 7.613281-27.667969zm0 0\"\r\n                      />\r\n                <path d=\"m114.617188 491.136719c-5.632813 0-11.203126-1.746094-15.957032-5.183594-8.855468-6.398437-12.992187-17.429687-10.582031-28.09375l32.9375-145.066406-111.703125-97.964844c-8.210938-7.1875-11.347656-18.515625-7.976562-28.90625 3.371093-10.367187 12.542968-17.726563 23.402343-18.730469l147.820313-13.417968 58.410156-136.746094c4.308594-10.046875 14.121094-16.535156 25.023438-16.535156 10.902343 0 20.714843 6.488281 25.023437 16.511718l58.410156 136.769532 147.796875 13.417968c10.882813.980469 20.054688 8.34375 23.425782 18.710938 3.371093 10.386718.253906 21.738281-7.980469 28.90625l-111.679688 97.941406 32.9375 145.066406c2.414063 10.667969-1.726562 21.695313-10.578125 28.09375-8.8125 6.378906-20.566406 6.914063-29.890625 1.324219l-127.464843-76.160156-127.445313 76.203125c-4.308594 2.582031-9.109375 3.859375-13.929687 3.859375zm141.375-112.871094c4.84375 0 9.640624 1.300781 13.953124 3.859375l120.277344 71.9375-31.085937-136.941406c-2.21875-9.769532 1.089843-19.925782 8.621093-26.515625l105.472657-92.523438-139.542969-12.671875c-10.003906-.894531-18.667969-7.1875-22.59375-16.46875l-55.101562-129.046875-55.148438 129.066407c-3.902344 9.238281-12.5625 15.53125-22.589844 16.429687l-139.519531 12.671875 105.46875 92.519531c7.554687 6.59375 10.839844 16.769531 8.621094 26.539063l-31.082031 136.941406 120.277343-71.9375c4.328125-2.558594 9.128907-3.859375 13.972657-3.859375zm-84.585938-221.824219v.019532zm169.152344-.066406v.023438s0 0 0-.023438zm0 0\"\r\n                      />\r\n            </svg>\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <svg\r\n                viewBox=\"0 0 511.98645 511\"\r\n\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className='icon icon-star icon-star__favourite'\r\n                fill='#65a15a'\r\n            >\r\n                <path d=\"m114.617188 491.136719c-5.632813 0-11.203126-1.746094-15.957032-5.183594-8.855468-6.398437-12.992187-17.429687-10.582031-28.09375l32.9375-145.066406-111.703125-97.964844c-8.210938-7.1875-11.347656-18.515625-7.976562-28.90625 3.371093-10.367187 12.542968-17.726563 23.402343-18.730469l147.820313-13.417968 58.410156-136.746094c4.308594-10.046875 14.121094-16.535156 25.023438-16.535156 10.902343 0 20.714843 6.488281 25.023437 16.511718l58.410156 136.769532 147.796875 13.417968c10.882813.980469 20.054688 8.34375 23.425782 18.710938 3.371093 10.386718.253906 21.738281-7.980469 28.90625l-111.679688 97.941406 32.9375 145.066406c2.414063 10.667969-1.726562 21.695313-10.578125 28.09375-8.8125 6.378906-20.566406 6.914063-29.890625 1.324219l-127.464843-76.160156-127.445313 76.203125c-4.308594 2.582031-9.109375 3.859375-13.929687 3.859375zm141.375-112.871094c4.84375 0 9.640624 1.300781 13.953124 3.859375l120.277344 71.9375-31.085937-136.941406c-2.21875-9.769532 1.089843-19.925782 8.621093-26.515625l105.472657-92.523438-139.542969-12.671875c-10.003906-.894531-18.667969-7.1875-22.59375-16.46875l-55.101562-129.046875-55.148438 129.066407c-3.902344 9.238281-12.5625 15.53125-22.589844 16.429687l-139.519531 12.671875 105.46875 92.519531c7.554687 6.59375 10.839844 16.769531 8.621094 26.539063l-31.082031 136.941406 120.277343-71.9375c4.328125-2.558594 9.128907-3.859375 13.972657-3.859375zm-84.585938-221.824219v.019532zm169.152344-.066406v.023438s0 0 0-.023438zm0 0\"\r\n                      />\r\n            </svg>\r\n        )\r\n    }\r\n}","const ActionsConst = {\r\n    FETCH_PRODUCTS: 'FETCH_PRODUCTS',\r\n    GET_PRODUCTS_FROM_LS: 'GET_PRODUCTS_FROM_LS',\r\n    TOGGLE_FAVOURITES: 'TOGGLE_FAVOURITES',\r\n    TOGGLE_MODAL: 'TOGGLE_MODAL',\r\n    CLOSE_MODAL: 'CLOSE_MODAL',\r\n    ADD_TO_CART: 'ADD_TO_CART',\r\n    DELETE_FROM_CART: 'DELETE_FROM_CART',\r\n    DECREASE_AMOUNT_IN_CART:'DECREASE_AMOUNT_IN_CART',\r\n    CLEAN_CART:'CLEAN_CART'\r\n};\r\nexport default ActionsConst;","/* FETCH_PRODUCTS: 'FETCH_PRODUCTS',\r\n    TOGGLE_FAVOURITES: 'TOGGLE_FAVOURITES',\r\n    TOGGLE_MODAL:'TOGGLE_MODAL',\r\n    CLOSE_MODAL:'CLOSE_MODAL',\r\n    ADD_TO_CART:'ADD_TO_CART',\r\n    DELETE_FROM_CART:'DELETE_FROM_CART',\r\n\r\n     toggleModal: (product)=>dispatch(toggleModal(product)),\r\n        closeModal: ()=>dispatch(closeModal()),\r\n        addToCart:()=>dispatch(addToCart()),\r\n        deleteFromCart:()=> dispatch(deleteFromCart()),\r\n    */\r\n\r\nimport ActionsConst from \"../actionConstatns/actionConstans\";\r\nimport axios from 'axios';\r\n\r\nexport const toggleModal = (product) => (dispatch)=>{\r\n    dispatch({type:ActionsConst.TOGGLE_MODAL, payload:product})\r\n};\r\n\r\nexport const closeModal=()=>(dispatch)=>{\r\n    dispatch({type:ActionsConst.CLOSE_MODAL})\r\n};\r\n\r\nexport const addToCart=(product)=>(dispatch)=>{\r\n    dispatch({type:ActionsConst.ADD_TO_CART, payload:product});\r\n    dispatch({type:ActionsConst.CLOSE_MODAL})\r\n}\r\n\r\nexport const deleteFromCart=(product)=>(dispatch)=>{\r\n    dispatch({type:ActionsConst.DELETE_FROM_CART, payload:product});\r\n    dispatch({type:ActionsConst.CLOSE_MODAL})\r\n}\r\n\r\nexport const decreaseAmountInCart=(product)=>(dispatch)=>{\r\n    dispatch({type:ActionsConst.DECREASE_AMOUNT_IN_CART, payload:product})\r\n}\r\n\r\nexport const toggleFavourite=(product)=>(dispatch)=>{\r\n    dispatch({type:ActionsConst.TOGGLE_FAVOURITES, payload:product})\r\n}\r\n\r\nexport const fetchProducts=()=>(dispatch)=>{\r\n    debugger;\r\n    axios('/products')\r\n        .then(result => {\r\n            dispatch({type:ActionsConst.FETCH_PRODUCTS, payload:result.data.data});\r\n        });\r\n}\r\n\r\nexport const setProductsListFromLS=(productListFromLS)=>(dispatch)=>{\r\n    dispatch({type:ActionsConst.GET_PRODUCTS_FROM_LS, payload:productListFromLS})\r\n}\r\nexport const cleanCart=(productsInCart)=>(dispatch)=>{\r\n    dispatch({type: ActionsConst.CLEAN_CART, payload:productsInCart})\r\n}","import React from 'react';\r\n\r\n\r\nconst InCartIcon =(props)=> {\r\n\r\n    const {inCart} = props;\r\n\r\n    return (\r\n        <div className='icon-container'>\r\n            {inCart?\r\n                <svg  className='icon--checked' viewBox=\"0 -65 424.032 424\"  xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m146.660156 293.367188c-4.09375 0-8.191406-1.558594-11.304687-4.695313l-130.667969-130.667969c-6.25-6.25-6.25-16.382812 0-22.632812s16.382812-6.25 22.636719 0l119.359375 119.359375 250.027344-250.027344c6.25-6.25 16.382812-6.25 22.632812 0s6.25 16.386719 0 22.636719l-261.332031 261.332031c-3.160157 3.136719-7.253907 4.695313-11.351563 4.695313zm0 0\"/></svg>\r\n\r\n                :null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default InCartIcon;","import React from 'react';\r\nimport './Button/Button.scss';\r\n\r\n\r\nconst FontIcon = (props) => {\r\n\r\n    const {iconClass} = props;\r\n    return (\r\n        <span className={`icon ${iconClass}`}></span>\r\n    )\r\n}\r\n\r\n\r\nexport default FontIcon;\r\n\r\n","import './Product.scss'\r\nimport React from 'react';\r\nimport Button from \"../Button/Button\";\r\nimport FavouriteIcon from \"../../icons/FavouriteIcon/FavouriteIcon\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal, toggleFavourite} from \"../../store/actionCreators/actionCreators\";\r\nimport InCartIcon from \"../../icons/InCartIcon\";\r\nimport FonTBtn from \"../Fontbtn\";\r\nimport FontIcon from \"../Fontbtn\";\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n    const {title, price, color, imgUrl} = props.product;\r\n    const {toggleModal, nowPath, product, toggleFavourite} = props;\r\n\r\n\r\n    return (\r\n        <div className='product-item'>\r\n            <div className='product-info'>\r\n                <h2 className='product-title'>{title}</h2>\r\n                <p>Price: {price}$</p>\r\n                <p>Color: {color}</p>\r\n            </div>\r\n            <img className='product-img' alt='plant' src={imgUrl}/>\r\n            <div className='product-btns'>\r\n                <FavouriteIcon isFavourite={product.isFavourite}\r\n                               toggleFavourite={() => toggleFavourite(product)}/>\r\n\r\n\r\n                {(nowPath === '/cart') ?\r\n                    <Button text={<FontIcon iconClass='fa fa-times'/>}\r\n                            classText='btn-delete-from-cart'\r\n                            onClick={() => {\r\n                                toggleModal(product)\r\n                            }}/>\r\n                    :\r\n                    <>\r\n                        <InCartIcon inCart={product.cartCounter}/>\r\n                        <Button text='Add to cart'\r\n                                classText='btn-to-cart'\r\n                                onClick={() => {\r\n                                    toggleModal(product)\r\n                                }}/>\r\n                    </>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        toggleModal: (product) => dispatch(toggleModal(product)),\r\n        toggleFavourite: (product) => dispatch(toggleFavourite(product)),\r\n    })\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);","import './ProductList.scss'\r\nimport Product from \"../../Product/Product\";\r\nimport React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nconst ProductList =(props)=> {\r\n        const {productList, history} = props;\r\n        const nowPath=history.location.pathname;\r\n\r\n    let products='Sorry, no products are available for now';\r\n    if(productList) {\r\n        products = productList.map((product) => {\r\n\r\n            return (<Product product={product}\r\n                             key={product.vendorCode}\r\n                             nowPath={nowPath}\r\n            />)\r\n        });\r\n    }\r\n    console.log('products rendered');\r\n\r\n        return (\r\n            <div className='product-list'>\r\n                {products}\r\n            </div>\r\n        );\r\n    };\r\nconst mapStoreToProps=(store)=>{\r\n    return {\r\n        productList:store.productList,\r\n    }\r\n}\r\nexport default connect(mapStoreToProps)(ProductList);","import React from 'react';\r\nimport Product from \"../../Product/Product\";\r\nimport {connect} from \"react-redux\";\r\nimport './Favourites.scss'\r\n\r\nconst Favourites = (props) => {\r\n\r\n    const {history, productList} = props;\r\n    const nowPath = history.location.pathname;\r\n    const favourites=productList.filter((product)=>product.isFavourite);\r\n\r\n    let favouritesProducts=<div className='favourites-title'>You liked nothing for now</div>\r\n    if(favourites.length) {\r\n        favouritesProducts = favourites.map((product) => {\r\n            return (<Product product={product}\r\n                             key={product.vendorCode}\r\n                             nowPath={nowPath}/>)\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='favorite-product-list product-list'>\r\n            {favouritesProducts}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStoreToProps=(store)=>{\r\n    return{\r\n        productList: store.productList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps)(Favourites);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport './CartTotal.scss'\r\n\r\n\r\nconst CartTotal = (props) => {\r\n    const {productList} = props;\r\n    const productsInCart = productList.filter((product) => product.cartCounter);\r\n    const getTotalPrice = () => {\r\n        const totalPrice = productsInCart.reduce((sum, currentItem) => (sum + (currentItem.price * currentItem.cartCounter)), 0);\r\n        return totalPrice;\r\n    }\r\n    return (\r\n        <div className='cart-total'>\r\n            <div className='cart-total-title'>\r\n                Total:\r\n            </div>\r\n            <div className='cart-total__price'>\r\n                {getTotalPrice()}$\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStoreToProps = (store) => {\r\n    return {\r\n        productList: store.productList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps)(CartTotal)\r\n","import './ProductInCart.scss'\r\nimport React from 'react';\r\nimport Button from \"../Button/Button\";\r\nimport FavouriteIcon from \"../../icons/FavouriteIcon/FavouriteIcon\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal, toggleFavourite, addToCart, decreaseAmountInCart} from \"../../store/actionCreators/actionCreators\";\r\nimport FontIcon from \"../Fontbtn\";\r\n\r\n\r\nconst ProductInCart = (props) => {\r\n\r\n    const {title, price, imgUrl, cartCounter} = props.product;\r\n    const {toggleModal, product, toggleFavourite, addToCart, decreaseAmountInCart} = props;\r\n\r\n    return (\r\n        <div className='product-inCart-item'>\r\n            <div className='product-inCart-info'>\r\n                <h2 className='product-inCart-title'>{title}</h2>\r\n                <img className='product-inCart-img' alt='plant' src={imgUrl}/>\r\n                <span>Price: {price}$</span>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div className='product-inCart-amount-control'>\r\n\r\n                <button className='decrease-product-amount btn' onClick={()=>decreaseAmountInCart(product)}>\r\n                    <FontIcon iconClass='fa fa-minus'/>\r\n                </button>\r\n                <span className='product-inCart-amount'>{cartCounter}</span>\r\n                <button className='increase-product-amount btn' onClick={()=>addToCart(product)}>\r\n                    <FontIcon iconClass='fa fa-plus'/>\r\n                </button>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='product-inCart-counter'>\r\n                Total price: {price*cartCounter}$\r\n            </div>\r\n\r\n            <div className='product-inCart-btns'>\r\n                <FavouriteIcon isFavourite={product.isFavourite}\r\n                               toggleFavourite={()=>toggleFavourite(product)}/>\r\n                <Button text={<FontIcon iconClass='fa fa-times'/>}\r\n                            classText='btn-delete-from-cart'\r\n                            onClick={() => {toggleModal(product)}}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return ({\r\n        toggleModal:(product)=>dispatch(toggleModal(product)),\r\n        toggleFavourite:(product)=>dispatch(toggleFavourite(product)),\r\n        addToCart:(product)=>dispatch(addToCart(product)),\r\n        decreaseAmountInCart:(product)=>dispatch(decreaseAmountInCart(product)),\r\n    })\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductInCart);","import * as yup from \"yup\";\r\n\r\nconst only_letters_regex = /^[a-zA-Zа-яА-ЯёЁЇїІіЄєҐґ]+$/;\r\nconst formScheme = yup.object().shape({\r\n    firstName: yup.string()\r\n        .min(2, 'Min name length is 2 symbols')\r\n        .matches(only_letters_regex, 'Name can contain only letters')\r\n        .required('This field is required'),\r\n\r\n    lastName: yup.string()\r\n        .min(2, 'Min name length is 2 symbols')\r\n        .matches(only_letters_regex, 'Last name can contain only letters')\r\n        .required('This field is required'),\r\n\r\n    address: yup.string()\r\n        .required('This field is required'),\r\n\r\n    mobileNumber: yup.number()\r\n        .min(6)\r\n        .required('Mobile is required')\r\n})\r\n\r\nexport default formScheme;","import './Form.scss';\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, Formik, Form, ErrorMessage} from \"formik\";\r\nimport Button from \"../Button/Button\";\r\nimport formScheme from \"./formScheme\";\r\nimport {cleanCart} from \"../../store/actionCreators/actionCreators\";\r\n\r\n\r\nconst CartForm = (props) => {\r\n\r\n\r\n\r\n    const {cleanCart, productList}=props;\r\n    const handleSubmit = (e) => {\r\n        const productsInCart = productList.filter((product) => product.cartCounter);\r\n        debugger;\r\n        console.log('You have new order:', productsInCart)\r\n        cleanCart(productsInCart);\r\n        console.log(productList);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                firstName: '',\r\n                lastName: '',\r\n                address: '',\r\n                mobileNumber: ''\r\n            }}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={formScheme}\r\n        >\r\n\r\n\r\n            {(formikProps) => {\r\n                return (\r\n                    <div className='cart-form'>\r\n                        <h2 className='form-title'>Fill out the form and we will contact you</h2>\r\n                        <Form className='form'>\r\n                            <Field className='form-element' component='input' type='text' name='firstName'\r\n                                   placeholder='First name'/>\r\n                            <div className='error-container'>\r\n                                <ErrorMessage className='form-valid-error' name='firstName'/>\r\n                            </div>\r\n\r\n                            <Field className='form-element' component='input' type='text' name='lastName'\r\n                                   placeholder='Last name'/>\r\n                            <div className='error-container'>\r\n                                <ErrorMessage className='form-valid-error' name='lastName'/>\r\n                            </div>\r\n\r\n                            <Field className='form-element' component='input' type='text' name='address'\r\n                                   placeholder='Address'/>\r\n                            <div className='error-container'>\r\n                                <ErrorMessage className='form-valid-error' name='address'/>\r\n                            </div>\r\n\r\n                            <Field className='form-element' component='input' type='tel' name='mobileNumber'\r\n                                   placeholder='Mobile number'/>\r\n                            <div className='error-container'>\r\n                                <ErrorMessage className='form-valid-error' name='mobileNumber'/>\r\n                            </div>\r\n\r\n                            <Button text='Checkout' classText='cart-form-btn btn' btnType='submit'\r\n                                    isDisabled={!formikProps.isValid}/>\r\n                        </Form>\r\n                    </div>\r\n                )\r\n\r\n            }\r\n\r\n            }\r\n\r\n        </Formik>\r\n    )\r\n\r\n}\r\nconst mapStoreToProps=(store)=>{\r\nreturn {\r\n        productList: store.productList,\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\nreturn{\r\ncleanCart:(productsInCart)=>dispatch(cleanCart(productsInCart))\r\n}\r\n\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(CartForm);","import React from 'react';\r\nimport Product from \"../../Product/Product\";\r\nimport {connect} from \"react-redux\";\r\nimport CartTotal from \"../../CartTotal/CartTotal\";\r\nimport ProductInCart from \"../../ProductInCart/ProductInCart\";\r\nimport './Cart.scss'\r\nimport CartForm from \"../../Form/Form\";\r\n\r\n\r\nconst Cart = (props) => {\r\n\r\n    const {history, productList} = props;\r\n    const nowPath = history.location.pathname;\r\n    debugger;\r\n    const productsInCart = productList.filter((product) => product.cartCounter);\r\n    const productsBought = productList.filter((product) => product.bought);\r\n    let cartProducts;\r\n    if (productsInCart.length) {\r\n        cartProducts = productsInCart.map((product) => {\r\n            return (<ProductInCart product={product}\r\n                                   key={product.vendorCode}\r\n                                   nowPath={nowPath}\r\n\r\n            />)\r\n\r\n        })\r\n    }\r\n    const fullCart = <div className='cart-full'>\r\n\r\n        <div className='cart-product-list product-list'>\r\n            {cartProducts}\r\n            <CartTotal/>\r\n        </div>\r\n        <CartForm/>\r\n    </div>\r\n\r\n    const emptyCart = <div className='cart-empty'>\r\n        <div className='empty-cart-title'>\r\n            Cart is empty, choose some products and add them into cart\r\n        </div>\r\n    </div>\r\n\r\n    const alreadyBoughtCart=<div className='already-bought-cart'>\r\n        <div className='bought-cart-title'>\r\n           Thank you for your order.\r\n            Our manager will contact you as soon as possible.\r\n        </div>\r\n    </div>\r\n\r\n    const chooseCart=()=>{\r\n        if(productsInCart.length){\r\n             return fullCart;\r\n        } else if(productsBought.length) {\r\n            return alreadyBoughtCart;\r\n        } else {\r\n            return emptyCart;\r\n        }\r\n    }\r\n\r\n    return <div className='cart-main'>\r\n        {chooseCart()}\r\n    </div>\r\n\r\n    /*<div className='cart-main'>\r\n\r\n        <div className='cart-product-list product-list'>\r\n            {cartProducts}\r\n            <CartTotal/>\r\n        </div>\r\n        <CartForm/>\r\n    </div>*/\r\n\r\n}\r\nconst mapStoreToProps = (store) => {\r\n    return {\r\n        productList: store.productList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps)(Cart);","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport ProductList from \"../Pages/ProductList/ProductList\";\r\nimport Favourites from \"../Pages/Favourites/Favourites\";\r\nimport Cart from '../Pages/Cart/Cart';\r\nimport './Main.scss'\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className='container'>\r\n                <Switch>\r\n                    <Route exact path='/'  component={ProductList}\r\n                    />\r\n                    <Route exact path='/favourites' component={Favourites}/>}\r\n                    />\r\n                    <Route exact path='/cart' component={Cart}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nimport './Footer.scss'\r\n\r\nconst Footer =()=> {\r\n\r\n        return (\r\n            <footer className='footer'>\r\n             <div className='socials'>\r\n                 <a href='#' className='fa fa-twitter icon icon-social' target='_blank'></a>\r\n                 <a href='#' className='fa fa-instagram icon icon-social' target='_blank'></a>\r\n                 <a href='#' className='fa fa-facebook icon icon-social' target='_blank'></a>\r\n             </div>\r\n                <div className='footer-copyright'>\r\n                    © 2020 Grow Gardens Cirdan comp.\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n\r\nexport default Footer;","import React, {useCallback, useEffect} from 'react';\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {addToCart, deleteFromCart, closeModal, fetchProducts,setProductsListFromLS} from \"./store/actionCreators/actionCreators\";\nimport './App.scss'\nimport FontIcon from \"./components/Fontbtn\";\nimport Footer from \"./components/Footer/Footer\";\n\n\nconst App = (props) => {\n    const {\n        location,\n        productList,\n        modalIsOpened,\n        closeModal,\n        setProductsListFromLS,\n        fetchProducts,\n        currentItem,\n        deleteFromCart,\n        addToCart\n    } = props;\n\n    const getProductList=useCallback(()=>{\n        const productListFromLS=localStorage.getItem('Plant_Products');\n        if(productListFromLS && productListFromLS !=='[]') {\n            setProductsListFromLS(productListFromLS);\n        } else {\n            fetchProducts();\n        }\n    },[])\n\n    useEffect(() => {\n        getProductList();\n    }, []);\n\n\n    window.addEventListener(\"beforeunload\", (ev) =>\n    {\n        ev.preventDefault();\n        productList.map((product)=>{\n            if (product.bought) {\n                product.bought=!product.bought;\n                return product\n            }\n        })\n        localStorage.setItem('Plant_Products', JSON.stringify(productList));\n        return 'String for browsers without preventDefault activation'\n    });\n\n\n    return (\n        <>\n            <Header/>\n            <Main/>\n            <Footer/>\n\n            {location.pathname === '/cart' ?\n                <Modal isOpened={modalIsOpened}\n                       header='Delete from cart modal'\n                       closeButton={'x'}\n                       closeModal={closeModal}\n                       text='Do you really want to delete this product?'\n                       actions={[\n                           <Button key='doNotDeleteFromCart'\n                                   classText='btn-inModal btn-inModal__no'\n                                   text='No'\n                                   onClick={closeModal}/>,\n                           <Button key='deleteFromCart'\n                                   classText='btn-inModal btn-inModal__yes'\n                                   text='Yes'\n                                   onClick={()=>deleteFromCart(currentItem)}/>\n                       ]}/>\n                :\n                <Modal isOpened={modalIsOpened}\n                       header='Add to cart modal'\n                       closeButton={<FontIcon iconClass='fa fa-times'/>}\n                       closeModal={closeModal}\n                       text='Do you want to add this cute plant to your cart?'\n                       actions={[\n                           <Button key='doNotAddToCart'\n                                   classText='btn-inModal btn-inModal__no'\n                                   text='No'\n                                   onClick={closeModal}/>,\n                           <Button key='addToCart'\n                                   classText='btn-inModal btn-inModal__yes'\n                                   text='Yes'\n                                   onClick={()=>addToCart(currentItem)}/>\n                       ]}/>\n            }\n\n        </>\n    )\n}\n\n\n\nconst mapStoreToProps=(store)=>{\n    return {\n        productList:store.productList,\n        modalIsOpened:store.modal.modalIsOpened,\n        currentItem:store.modal.currentItem\n    }\n}\n\nconst mapDispatchToProps=(dispatch) => {\n    return({\n        fetchProducts:()=>dispatch(fetchProducts()),\n        addToCart:(product)=>dispatch(addToCart(product)),\n        deleteFromCart:(product)=> dispatch(deleteFromCart(product)),\n        closeModal:()=>dispatch(closeModal()),\n        setProductsListFromLS:(productListFromLS)=>dispatch(setProductsListFromLS(productListFromLS)),\n    })\n}\n\n\n\n\nexport default withRouter(connect(mapStoreToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ActionsConst from \"../actionConstatns/actionConstans\";\r\n\r\n\r\nconst initialState={\r\n    modalIsOpened:false,\r\n    currentItem:null\r\n}\r\nconst modal=(store=initialState, action)=>{\r\n    switch (action.type) {\r\n        case ActionsConst.TOGGLE_MODAL:\r\n            return {...store, modalIsOpened: !store.modalIsOpened, currentItem: action.payload};\r\n        case ActionsConst.CLOSE_MODAL:\r\n            return {...store, modalIsOpened: false};\r\n    }\r\n    return store;\r\n}\r\n\r\nexport default modal;","import ActionsConst from \"../actionConstatns/actionConstans\";\r\nimport update from \"react-addons-update\";\r\n\r\nexport const productList = (store = [], action) => {\r\n\r\n    let product, productIndex, updatedProduct, prevCartCounter\r\n\r\n    switch (action.type) {\r\n        case ActionsConst.FETCH_PRODUCTS:\r\n            return action.payload;\r\n\r\n        case ActionsConst.GET_PRODUCTS_FROM_LS:\r\n            return JSON.parse(action.payload);\r\n\r\n        case ActionsConst.TOGGLE_FAVOURITES:\r\n            product = action.payload;\r\n\r\n            productIndex = store.indexOf(product);\r\n            updatedProduct = {...product, isFavourite: !product.isFavourite};\r\n            return update(store, {$splice: [[productIndex, 1, updatedProduct]]})\r\n\r\n        case ActionsConst.ADD_TO_CART:\r\n            product = action.payload;\r\n            productIndex = store.indexOf(product);\r\n\r\n            prevCartCounter = product.cartCounter || 0;\r\n            updatedProduct = {...product, cartCounter: ++prevCartCounter};\r\n            return update(store, {$splice: [[productIndex, 1, updatedProduct]]});\r\n\r\n        case ActionsConst.DELETE_FROM_CART:\r\n            product = action.payload;\r\n            prevCartCounter = product.cartCounter || 0;\r\n            productIndex = store.indexOf(product);\r\n            updatedProduct = {...product, cartCounter: 0};\r\n            return update(store, {$splice: [[productIndex, 1, updatedProduct]]});\r\n\r\n        case ActionsConst.DECREASE_AMOUNT_IN_CART:\r\n            product = action.payload;\r\n            prevCartCounter = product.cartCounter || 0;\r\n            productIndex = store.indexOf(product);\r\n            updatedProduct = {...product, cartCounter: --product.cartCounter};\r\n            return update(store, {$splice: [[productIndex, 1, updatedProduct]]});\r\n        case ActionsConst.CLEAN_CART:\r\n            const productInCart = action.payload;\r\n\r\n            return store.map(product => {\r\n                if (productInCart.includes(product)) {\r\n                    productIndex = store.indexOf(product);\r\n                    updatedProduct = {...product, cartCounter: 0, bought: true};\r\n                    return updatedProduct\r\n                } else {\r\n                    return product\r\n                }\r\n            });\r\n    }\r\n    return store;\r\n}\r\nexport default productList;","import modal from \"./modalReducer\";\r\nimport productList from \"./productListReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\n\r\nconst reducer=combineReducers({\r\n    modal, productList\r\n})\r\n\r\nexport default reducer;","import reducer from \"./reducers/reducer\";\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f;\r\n\r\nconst store = createStore(reducer,\r\n    compose(applyMiddleware(thunk), reduxDevTools)\r\n);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'normalize.css';\nimport {Provider} from \"react-redux\";\nimport store from './store/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}